def levenstein(A, B):
    """
    Вычисление расстояния Ливенштейна (кратчайшего редакционного расстояния) между строками

    A,B - различные строки. N - количество элементов в строке A, M - количество элементов в строке B.
    Типографические  ошибки:
    1) перепутали символ
    2) вставили лишний символ
    3) потеряли нужный
    F[i][j] - минимальное редакционное расстояние между срезами A[:i] и B[:j]
    :return: F[N][M]
    """

    F = [[i + j if i * j == 0 else 0 for j in range(len(B)+1)] for i in range(len(A)+1)]
    for i in range(1, len(A)+1):
        for j in range(1, len(1, len(B)+1)):
            if A[i-1] == B[j-1]:
                F[i][j] = F[i-1][j-1]
            else:
                F[i][j] = 1 + min (F[i-1][j],F[i][j-1],F[i-1][j-1])
    return F[len(A)][len(B)]


def equal(A, B):
    """
    Проверка равенства строк

    Строки равны если редакционное расстояние равно 0, но можно проше:
    сравнить сначала длины строк, и если они окажутся одинаковы сравнить посимвольно.
    :return:
    """

    if len(A) != len(B):
        return False
    for i in range(len(A)):
        if A[i] != B[i]:
            return False
    return True


